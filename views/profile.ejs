<!DOCTYPE html>
<html lang="en">
<%- include('partials/head', { title: title }) %>
<body>
    <%- include('partials/navbar') %>
    
    <div class="profile-container">
        <div class="profile-header">
            <div class="profile-info">
                <img src="<%= profileUser.avatar %>" alt="<%= profileUser.username %>" class="profile-avatar">
                <div class="profile-details">
                    <h1>@<%= profileUser.username %></h1>
                    <p class="profile-bio"><%= profileUser.bio || 'Passionate collector' %></p>
                    
                    <div class="profile-stats">
                        <div class="stat">
                            <span class="stat-number"><%= postsCount %></span>
                            <span class="stat-label">Posts</span>
                        </div>
                        <div class="stat">
                            <span class="stat-number"><%= followersCount %></span>
                            <span class="stat-label">Followers</span>
                        </div>
                        <div class="stat">
                            <span class="stat-number"><%= followingCount %></span>
                            <span class="stat-label">Following</span>
                        </div>
                        <div class="stat">
                            <span class="stat-number"><%= collectionsCount %></span>
                            <span class="stat-label">Collections</span>
                        </div>
                    </div>
                    
                    <% if (!isOwnProfile) { %>
                    <div class="profile-actions">
                        <button class="btn <%= isFollowing ? 'btn-secondary' : 'btn-primary' %> follow-btn" 
                                onclick="followUser('<%= profileUser._id %>')">
                            <%= isFollowing ? 'Unfollow' : 'Follow' %>
                        </button>
                        <button class="btn btn-secondary">
                            <i class="fas fa-envelope"></i>
                            Message
                        </button>
                    </div>
                    <% } else { %>
                    <div class="profile-actions">
                        <button class="btn btn-secondary" onclick="editProfile()">
                            <i class="fas fa-edit"></i>
                            Edit Profile
                        </button>
                    </div>
                    <% } %>
                </div>
            </div>
        </div>
        
        <div class="profile-tabs">
            <button class="tab-btn active" onclick="showTab('posts')">
                <i class="fas fa-th"></i>
                Posts
            </button>
            <button class="tab-btn" onclick="showTab('collections')">
                <i class="fas fa-bookmark"></i>
                Collections
            </button>
        </div>
        
        <div class="profile-content">
            <div class="tab-content active" id="posts-tab">
                <% if (posts.length === 0) { %>
                <div class="empty-content">
                    <div class="empty-icon">
                        <i class="fas fa-camera"></i>
                    </div>
                    <h3>No posts yet</h3>
                    <p><%= isOwnProfile ? 'Share your first collection item!' : 'This user hasn\'t posted anything yet.' %></p>
                    <% if (isOwnProfile) { %>
                    <a href="/create" class="btn btn-primary">Create Post</a>
                    <% } %>
                </div>
                <% } else { %>
                <div class="posts-grid">
                    <% posts.forEach(post => { %>
                    <div class="grid-item" onclick="window.location.href='/post/<%= post._id %>'">
                        <div class="grid-media">
                            <% if (post.mediaType === 'video') { %>
                            <video>
                                <source src="<%= post.mediaURL %>" type="video/mp4">
                            </video>
                            <div class="video-indicator">
                                <i class="fas fa-play"></i>
                            </div>
                            <% } else { %>
                            <img src="<%= post.mediaURL %>" alt="<%= post.caption %>">
                            <% } %>
                        </div>
                        
                        <div class="grid-overlay">
                            <div class="grid-stats">
                                <span>
                                    <i class="fas fa-heart"></i>
                                    <%= post.likes.length %>
                                </span>
                                <span>
                                    <i class="fas fa-comment"></i>
                                    <%= post.comments.length %>
                                </span>
                            </div>
                        </div>
                    </div>
                    <% }) %>
                </div>
                <% } %>
            </div>
            
            <div class="tab-content" id="collections-tab">
                <% if (collections.length === 0) { %>
                <div class="empty-content">
                    <div class="empty-icon">
                        <i class="fas fa-bookmark"></i>
                    </div>
                    <h3>No collections yet</h3>
                    <p><%= isOwnProfile ? 'Create your first collection!' : 'This user hasn\'t created any collections yet.' %></p>
                    <% if (isOwnProfile) { %>
                    <button class="btn btn-primary" onclick="createCollection()">Create Collection</button>
                    <% } %>
                </div>
                <% } else { %>
                <div class="collections-grid">
                    <% collections.forEach(collection => { %>
                    <div class="collection-card" onclick="window.location.href='/collection/<%= collection._id %>'">
                        <div class="collection-preview">
                            <% if (collection.items && collection.items.length > 0) { %>
                            <% const previewItems = collection.items.slice(0, 4) %>
                            <% previewItems.forEach((item, index) => { %>
                            <div class="preview-item preview-<%= index + 1 %>">
                                <img src="<%= item.mediaURL %>" alt="<%= item.caption %>">
                            </div>
                            <% }) %>
                            <% } else { %>
                            <div class="empty-collection">
                                <i class="fas fa-plus"></i>
                            </div>
                            <% } %>
                        </div>
                        
                        <div class="collection-info">
                            <h3><%= collection.name %></h3>
                            <p><%= collection.items.length %> items</p>
                            <span class="collection-category"><%= collection.category %></span>
                        </div>
                    </div>
                    <% }) %>
                </div>
                <% } %>
            </div>
        </div>
    </div>
    
    <%- include('partials/scripts') %>
    <script>
        function showTab(tabName) {
            // Remove active class from all tabs and content
            document.querySelectorAll('.tab-btn').forEach(btn => btn.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));
            
            // Add active class to clicked tab and corresponding content
            event.target.classList.add('active');
            document.getElementById(tabName + '-tab').classList.add('active');
        }
        
        function filterByCategory(category) {
            const url = new URL(window.location);
            if (category) {
                url.searchParams.set('category', category);
            } else {
                url.searchParams.delete('category');
            }
            url.searchParams.delete('page'); // Reset pagination
            window.location.href = url.toString();
        }
        
        function searchItems() {
            const searchInput = document.getElementById('explore-search');
            const query = searchInput.value.trim();
            
            const url = new URL(window.location);
            if (query) {
                url.searchParams.set('search', query);
            } else {
                url.searchParams.delete('search');
            }
            url.searchParams.delete('page'); // Reset pagination
            window.location.href = url.toString();
        }
        
        function editProfile() {
            // Show edit profile modal
            const modalContent = `
                <div class="modal-content">
                    <div class="modal-header">
                        <h3>Edit Profile</h3>
                        <button onclick="flexbase.hideModal()">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form id="edit-profile-form">
                            <div class="form-group">
                                <label for="edit-username">Username</label>
                                <input type="text" id="edit-username" value="<%= profileUser.username %>" required>
                            </div>
                            <div class="form-group">
                                <label for="edit-bio">Bio</label>
                                <textarea id="edit-bio" maxlength="200"><%= profileUser.bio %></textarea>
                            </div>
                            <div class="form-group">
                                <label class="checkbox-label">
                                    <input type="checkbox" id="edit-private" <%= profileUser.isPrivate ? 'checked' : '' %>>
                                    Private Account
                                </label>
                            </div>
                            <div class="form-actions">
                                <button type="button" class="btn btn-secondary" onclick="flexbase.hideModal()">Cancel</button>
                                <button type="submit" class="btn btn-primary">Save Changes</button>
                            </div>
                        </form>
                    </div>
                </div>
            `;
            
            document.getElementById('modal-overlay').innerHTML = modalContent;
            document.getElementById('modal-overlay').classList.add('active');
            
            document.getElementById('edit-profile-form').addEventListener('submit', async (e) => {
                e.preventDefault();
                await updateProfile();
            });
        }
        
        async function updateProfile() {
            const username = document.getElementById('edit-username').value;
            const bio = document.getElementById('edit-bio').value;
            const isPrivate = document.getElementById('edit-private').checked;
            
            try {
                const response = await fetch('/api/users/profile', {
                    method: 'PUT',
                    headers: {
                        'Authorization': `Bearer ${flexbase.getToken()}`,
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ username, bio, isPrivate })
                });
                
                const data = await response.json();
                
                if (data.success) {
                    showNotification({ type: 'success', message: 'Profile updated successfully' });
                    setTimeout(() => window.location.reload(), 1000);
                } else {
                    showNotification({ type: 'error', message: data.message });
                }
            } catch (error) {
                showNotification({ type: 'error', message: 'Failed to update profile' });
            }
        }
        
        function createCollection() {
            const modalContent = `
                <div class="modal-content">
                    <div class="modal-header">
                        <h3>Create Collection</h3>
                        <button onclick="flexbase.hideModal()">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form id="create-collection-form">
                            <div class="form-group">
                                <label for="collection-name">Collection Name</label>
                                <input type="text" id="collection-name" required maxlength="50">
                            </div>
                            <div class="form-group">
                                <label for="collection-category">Category</label>
                                <select id="collection-category" required>
                                    <option value="sneakers">Sneakers</option>
                                    <option value="watches">Watches</option>
                                    <option value="luxury">Luxury</option>
                                    <option value="art">Art</option>
                                    <option value="cars">Cars</option>
                                    <option value="jewelry">Jewelry</option>
                                    <option value="other">Other</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="collection-description">Description</label>
                                <textarea id="collection-description" maxlength="200"></textarea>
                            </div>
                            <div class="form-group">
                                <label class="checkbox-label">
                                    <input type="checkbox" id="collection-private">
                                    Private Collection
                                </label>
                            </div>
                            <div class="form-actions">
                                <button type="button" class="btn btn-secondary" onclick="flexbase.hideModal()">Cancel</button>
                                <button type="submit" class="btn btn-primary">Create Collection</button>
                            </div>
                        </form>
                    </div>
                </div>
            `;
            
            document.getElementById('modal-overlay').innerHTML = modalContent;
            document.getElementById('modal-overlay').classList.add('active');
            
            document.getElementById('create-collection-form').addEventListener('submit', async (e) => {
                e.preventDefault();
                await submitCollection();
            });
        }
        
        async function submitCollection() {
            const name = document.getElementById('collection-name').value;
            const category = document.getElementById('collection-category').value;
            const description = document.getElementById('collection-description').value;
            const isPrivate = document.getElementById('collection-private').checked;
            
            try {
                const response = await fetch('/api/collections', {
                    method: 'POST',
                    headers: {
                        'Authorization': `Bearer ${flexbase.getToken()}`,
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ name, category, description, isPrivate })
                });
                
                const data = await response.json();
                
                if (data.success) {
                    showNotification({ type: 'success', message: 'Collection created successfully' });
                    flexbase.hideModal();
                    setTimeout(() => window.location.reload(), 1000);
                } else {
                    showNotification({ type: 'error', message: data.message });
                }
            } catch (error) {
                showNotification({ type: 'error', message: 'Failed to create collection' });
            }
        }
    </script>
</body>
</html>